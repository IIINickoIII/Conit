@model Conit.WEB.ViewModels.InstructionViewModel
@{
    if (Model.IsNewCreated)
    {
        ViewBag.Title = "New Instruction";
    }
    else
    {
        ViewBag.Title = $"{Model.ProductDto.Name} {" Instruction"}";
    }
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h2>@Model.Title</h2>
@using (Html.BeginForm("Save", "Instructions", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="form-group">
        @Html.LabelFor(c => c.ProductId, htmlAttributes: new { @class = "col-form-label col-form-label-sm" })
        @Html.DropDownListFor(c => c.ProductId, new SelectList(Model.ProductDtos, "Id", "Name"), "Select product", htmlAttributes: new { @class = "form-control form-control-sm" })
        @Html.ValidationMessageFor(c => c.ProductId)
    </div>
    <div class="form-group">
        @Html.LabelFor(c => c.Description, htmlAttributes: new { @class = "col-form-label col-form-label-sm" })
        @Html.TextAreaFor(c => c.Description, htmlAttributes: new { @class = "form-control form-control-sm" })
        @Html.ValidationMessageFor(c => c.Description)
    </div>
    @Html.HiddenFor(c => c.Id)
    @Html.HiddenFor(c => c.DateOfAdding)
    @Html.AntiForgeryToken()
    <button type="submit" class="btn btn-primary">Save</button>
}
@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
}
